/*
 * Blog API
 * This is a blog API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dzenancindrak@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JsApiBlogClient);
  }
}(this, function(expect, JsApiBlogClient) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Post', function() {
      beforeEach(function() {
        instance = new JsApiBlogClient.Post();
      });

      it('should create an instance of Post', function() {
        // TODO: update the code to test Post
        expect(instance).to.be.a(JsApiBlogClient.Post);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property tags (base name: "tags")', function() {
        // TODO: update the code to test the property tags
        expect(instance).to.have.property('tags');
        // expect(instance.tags).to.be(expectedValueLiteral);
      });

      it('should have the property header (base name: "header")', function() {
        // TODO: update the code to test the property header
        expect(instance).to.have.property('header');
        // expect(instance.header).to.be(expectedValueLiteral);
      });

      it('should have the property content (base name: "content")', function() {
        // TODO: update the code to test the property content
        expect(instance).to.have.property('content');
        // expect(instance.content).to.be(expectedValueLiteral);
      });

      it('should have the property author (base name: "author")', function() {
        // TODO: update the code to test the property author
        expect(instance).to.have.property('author');
        // expect(instance.author).to.be(expectedValueLiteral);
      });

      it('should have the property dateCreated (base name: "dateCreated")', function() {
        // TODO: update the code to test the property dateCreated
        expect(instance).to.have.property('dateCreated');
        // expect(instance.dateCreated).to.be(expectedValueLiteral);
      });

      it('should have the property dateUpdated (base name: "dateUpdated")', function() {
        // TODO: update the code to test the property dateUpdated
        expect(instance).to.have.property('dateUpdated');
        // expect(instance.dateUpdated).to.be(expectedValueLiteral);
      });

    });
  });

}));
